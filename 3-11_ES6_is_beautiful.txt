当过去谈到js时，我对它的一个评论就是js会很快变得相当混乱。当然，那是ES6之前的事情了，ES6载入了大量的特性，但是我认为ES6最好的部分是它语法的清晰和简洁。
下面我讲介绍一些ES6这方面特性的例子，并和以前做比较。
1、获取变量
ES5中：
var user = this.pros.user,post=this.pros.post;
在ES6中变成了：
const{user,post} = this.pros;
2、short hand匿名函数
ES5中：
return (function(dispatch){
    return dispatch(myAction())
});
ES6中:
return((dispatch=>{
return dispatch(myAction());
});
这很酷，但好像没太大区别，先等一下，我们可以再压缩一下...
//ES6
return dispatch => {
	return dispatch(myAction());
}
甚至更加精简...
//ES6
return dispatch => dispatch(myAction());
3、扩展的运算
//ES5
var arr1 = [1,2,3];
var arr2 = [4,5,6];
Array.prototype.push.apply(arr1,arr2);
变成了...
//ES6
let arr1 = [1,2,3];
let arr2 = [4,5,6];
arr1.push(...arr2);
4、默认的参数值
//ES5
var user = function(state){
	if(state == undefined){
		state = {
		name:'Ewan'
		};
	}
	console.log(state.name);
}
在ES6中...
//ES6
const user = (state={name:'Ewan'})=>{
	console.log(state.name);
}
这可真有趣。
接下来是我经常用的一些特性，特别是在构建react部分时
1、模版常量
//ES5
var name = "Ewan";
console.log("hello,my name is"+name);
//ES6
let name = "Ewam";
console.log('Hello,my name is ${name}');
清晰多了！
2、查询数组
//ES5
var names = ["Ewan","Fleabag","Sam","Candy"];
var res = name.filter(function(name){
	return name = "Sam";
})[0];
console.log(res);
//ES6
let names =  ["Ewan","Fleabag","Sam","Candy"];
let res = names.find(name=>name==="Sam");
console.log(res);
就如你从这些例子中所看到的，js一路走来走到了ES6，不仅是有了新特性，语法本身也变得愈发成熟，甚至当你使用时变得更加有趣！
话虽如此，ES6还没有被广泛采用，许多浏览器并不支持，但是现在有一个很酷的项目叫做babel，可以将你的ES6代码变成ES5代码，所以你现在就可以使用ES6了。
源地址：http://ewanvalentine.io/es6-is-beautiful/