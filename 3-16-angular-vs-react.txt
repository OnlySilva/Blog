为你的下一个app选一个框架一直是一个困难的选择，因为它们不同的因素表现不一样，支持者与反对者也各有观点。然而，当任何技术进行考量时，通常都会考虑到基础的地方。
当试着决定用最火的两个web技术来构建你的HTML5应用时，这篇文章将聚焦2个框架重要的方面并让最后的决定不再迷惑。由于技术领域针对这2个库有大量的意见和评论，我们将关注点更多的放在更高层次的考虑，这些考虑往往是决定者开始新项目之前认为是最重要的。
我们将通过以下几个方面来开展文章：
这两个工具区别在哪里，他们各自擅长做什么？
资源——外面有多少可用的资源，或者说你的队伍如何适应。
成熟/成功——它被开源多久了，使用它的成功故事，它的流行情况和它背后的社区。
知识基础——它很好的解释了自身么？是否有保持更新的大量的文档和指导以及训练，例如stack overflow
首先，注意angularjs2，我注意到angularjs有2个版本，angularjs2修改了1的许多问题，但是我将从学术角度来看待这个问题。
它们的区别是什么，我为什么在乎？
首先，从技术角度来说，angular是一个框架而react是一个库。区别就像买pc时做的比较——买一个现成的pc还是自己做的pc。
angular是固执的，选择angular意味着遵循它的结构，遵循angular建构你的应用的方式，还要经常遵循它内部部件的选择，比如路由、http服务等等。使用react你可以自由的选择你的内部部件和你应用的结构。这也是为什么react为什么有这么多初学者配件的原因，这些配件把react和其他部件和框架（flux/redux）绑到一起。
根据你项目的不同，这2个框架的特性也会变得时而有利时而不利。使用angular的话你可以 很快进入底层，其他angular开发这也很快能够加入进来做贡献。用react的话你可能必须花事件去和你的新成员解释项目结构选择以及部件是由不成熟的或者不兼容的构成。
另一方面，为你的项目选择最合适的组件是很重要的。如果你正在构建一个具有长生命周期并且在特性和深度上都会增加的工程，你就不会想把时间花费到调试那些不兼容的组件或者架构上面。angular1非常像'一种尺寸适合全部'的买交易，如果实际上尺寸并不完全适合，你就会有一个长期的痛苦过程。不过angular2将把这个选择模块化，所以你可以用最佳选择构成一个紧密的整体，而且这个整体会很好的运行。
在如此灵活性越来月流行的氛围下，代码是否可以快速和完全的被测试基于可获得的。尽管你可以通过完整的库（像karma和jasmine)对angular和react进行单元测试，angular在这个区域理由一些微小的edge，如果这个edge对你的工程至关重要的话，那么这就会成为一种变数。
并不是所有的web开发只是web开发
大多数开发者只喜欢其中一个框架，这并不是什么奇怪的事，这通常是根据开发者自己的经验，但这其中肯定会有一些偏差，这不意味着他们不选择的框架是不好的，只是他们更喜欢一种框架。
尽管angualr开始的学习曲线相当陡峭，但是还是有很多初学者选择了它，因为angular包含了一组内置方法——它有一个框架，对于所有文档使用一种方式进行编码，并且保证了所有的部件都会很好的协作。过段时间后，新手变得有经验了，angular开发者的数量也反映了这个。
angular也是一个比react存在时间长得多的东西，这也反应在网上使用angular的开发者的数量和react开发者求职的数量上。这是现在的情况，将来可能并不是这样。
成熟、稳定和成功
毫无疑问，angular比react存在的时间长太多，至少1.0版本是这样。这意味着构建工程的api并不会太去改动，而正在发展中的平台，作者已经要将其改动了。
然而，我将讨论angular2，因为她同样适用上述。
angular2在很长一段时间里都是即将要出现的事，而现在呈现出一种被认为足够稳定来制作正常工程的状态。或许有些代码库不够稳定，angualr2是长时间思考和仔细构造的产物。angular1和react都几乎as they went along，angular2是把从1中得到的所有经验和反馈都加以考虑的一种新的库。
和angular1的稳定性和依赖性相比，react流动性很大。它始终在版本0.14.7上面，当它被facebook所有时，如果他们感觉有什么可以提升它的话，它并不反对彻底重构和改变内部工作方式。如果你选择了react，你就得把这个风险和事实写进你的代码的发展和维护之中。
现在angular和react都有如此多的信息，指导，代码案例和问答。angular开发者往往发现他们在工程中遇到的问题都已经被问过了。react项目由于他的特性，拥有更多的案例问题，组件兼容性和API版本改变。
angular和react 所以我应该选择哪一个
像其他事一样，选择适合你工程的。angular可以很快产生许多强力的东西，而react给你充分的自由性来选择组件的结构和选择，来适应你的工程 。
想要很快的建立项目，并且很容易被新开发者接收-用angular
构建一个长期的工程，需要一系列的组件和内部结构-用react
喜欢angular？用angular
喜欢react？用react
对使用一系列兼容的没被锁的组件感兴趣，同时不介意在它的早期使用它？用angular2.
